version: '3.3'

services:
  database:
    image: postgres:13.3-alpine
    container_name: economy_postgres_container
    env_file:
      - ./postgres/postgres.env
    ports:
      - "5434:5432"
    expose:
      - 5432
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - shared
    restart: unless-stopped

  app:
    build: ./app
    container_name: economy_app_container
    ports:
      - "8010:8000"
    expose:
      - 8000
    env_file:
      - .env
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    networks:
      - shared
    restart: unless-stopped

    volumes:
      - static:/usr/src/economy/static
      - media:/usr/src/economy/media
      - ./app:/usr/src/economy

    depends_on:
      - database

  nginx:
    build: ./nginx
    container_name: economy_nginx_container
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/etc/nginx/conf.d/staticfiles/
      - media:/etc/nginx/conf.d/mediafiles/
      - ./nginx/:/etc/nginx/conf.d/
      - letsencrypt:/etc/letsencrypt/
    networks:
      - shared
    depends_on:
      - database
      - app

  sertbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: economy_certbot_container
    volumes:
      - letsencrypt:/etc/letsencrypt/
      - ./app:/var/www/html/
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL_HOST_USER} --agree-tos --no-eff-mail -d ${DOMAIN}

volumes:
  static:
  media:
  letsencrypt:

networks:
  shared:
    driver: bridge